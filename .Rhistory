for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5000
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
bankAnnual[count.year,]<-bankAccounts
count.year <- count.year+1}
house <- c(4.8, 3.8, 5.7);
food<- c(3.5, 4.3, 5.0);
fun <- c(7.8, 2.1, 10.5);
#and incomes (through TAships) of
income <- c(21, 21, 21);
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnual <- matrix(0,(start.year-end.year)+1,length(bankAccounts))
for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5000
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
# bankAnnual[count.year,]<-bankAccounts
# count.year <- count.year+1}
}
bankAccounts
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnual <- matrix(0,(start.year-end.year)+1,length(bankAccounts))
bankAnnual <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
bankAnnual
for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
print(bankAccounts)
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5000
print(bankAccounts)
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
# bankAnnual[count.year,]<-bankAccounts
# count.year <- count.year+1}
}
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnual <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
print(bankAccounts)
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5
print(bankAccounts)
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
# bankAnnual[count.year,]<-bankAccounts
# count.year <- count.year+1}
}
house <- c(4.8, 3.8, 5.7);
food<- c(3.5, 4.3, 5.0);
fun <- c(7.8, 2.1, 10.5);
#and incomes (through TAships) of
income <- c(21, 21, 21);
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnual <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
print(bankAccounts)
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5
print(bankAccounts)
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
bankAnnual[count.year,]<-bankAccounts
count.year <- count.year+1}
}
bankAnnual
house <- c(4.8, 3.8, 5.7);
food<- c(3.5, 4.3, 5.0);
fun <- c(7.8, 2.1, 10.5);
#and incomes (through TAships) of
income <- c(21, 21, 21);
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnual <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
for (j in start.year:end.year) {
print(j)
if(j %% 2 != 0){
print(bankAccounts)
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5
print(bankAccounts)
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
bankAnnual[count.year,]<-bankAccounts
count.year <- count.year+1
}
bankAnnual
house <- c(4.8, 3.8, 5.7);
food<- c(3.5, 4.3, 5.0);
fun <- c(7.8, 2.1, 10.5);
#and incomes (through TAships) of
income <- c(21, 21, 21);
bankAccounts <- c(10, 9.2, 5.6); #define bank accounts here
interestRate <- 0.0525;
trust.recip <- c(1,3)
start.year <- 2015
end.year <- 2020
count.year <- 1
bankAnnualstart <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
bankAnnualend <- matrix(0,(end.year-start.year)+1,length(bankAccounts))
for (j in start.year:end.year) {
print(j)
bankAnnualstart[count.year,]<-bankAccounts
if(j %% 2 != 0){
bankAccounts[trust.recip] <- bankAccounts[trust.recip]+5
}
for (i in 1:length(bankAccounts)) {
bankAccounts[i] <- bankAccounts[i]-(house[i]+food[i]+fun[i])+income[i]
bankAccounts[i] <- interestRate*bankAccounts[i] + bankAccounts[i]
}
bankAnnualend[count.year,]<-bankAccounts
count.year <- count.year+1
}
bankAnnualstart
bankAnnualend
summed.series <- 0
i <- 1
While(i <= 17) {
summed.series <- summed.series+i
i <- i+1
}
summed.series <- 0
i <- 1
While(i <= 17)
{
summed.series <- summed.series+i
i <- i+1
}
summer.series
summed.series
summed.series <- 0
i <- 1
While(i <= 17)
{
summed.series <- summed.series+i
i <- i + 1
}
summed.series
i
i <= 17
While(i <= 17)
{
summed.series <- summed.series + i
i <- i + 1
}
summed.series <- 0
i <- 1
while(i <= 17)
{
summed.series <- summed.series + i
i <- i + 1
}
summed.series
sum(1:17)
x <- 0#user defined
if(x <= -1)
{
print("small")
}
if(x > -1 & x < 1)
{
print("medium")
}
if(x >= 1)
{
print("big")
}
user.input <- readline(prompt="Enter whole integer: ")
x <- as.integer(user.input)
x
if(x <= -1)
{
print("small")
}
if(x > -1 & x < 1)
{
print("medium")
}
if(x >= 1)
{
print("big")
}
length(bankAccounts)
num.years
num.years <- 5
num.years
bankAnnual <- matrix(0,num.years,length(bankAccounts))
bankAnnual
setwd("C:/Users/Evan/Documents/GitHub/Doughty_RBootcamp_Fall2017")
getwd()
?rnorm
get_heights <- function(sample = 100,mean.height=50,sdev.height=10)
{
sample.heights <- rnorm(n=sample,mean=mean.height,sd=sdev.height)
return(sample.heights)
}
sample.heights
heights <- get_heights(100, 69, 10)
heights
heights <- get_heights(1000, 69, 10)
heights
ave.heights <- mean(heights)
ave.heights
mean_heights_100 <- rep(0,iter)
?rep
mean_heights_100 <- rep(0,length.out = iter)
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
mean_heights_100
for(i in 1000)
{
mean_heights_100[i] <- get_heights(100, 69, 10)
}
mean_heights_100[i] <- get_heights(100, 69, 10)
get_heights <- function(sample = 100,mean.height=50,sdev.height=10)
{
heights <- rnorm(n=sample,mean=mean.height,sd=sdev.height)
ave.height <- mean(heights)
return(ave.heightheights)
}
ave.height
get_heights <- function(sample = 100,mean.height=50,sdev.height=10)
{
heights <- rnorm(n=sample,mean=mean.height,sd=sdev.height)
ave.height <- mean(heights)
return(ave.height)
}
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
for(i in 1000)
{
mean_heights_100[i] <- get_heights(100, 69, 10)
}
mean_heights_100
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_100[i] <- get_heights(100, 69, 10)
}
mean_heights_100
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_1000[i] <- get_heights(1000, 69, 10)
}
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_100[i] <- get_heights(100, 69, 10)
}
#5
iter <- 1000
mean_heights_1000 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_1000[i] <- get_heights(1000, 69, 10)
}
mean_heights_1000
min(mean_heights_1000)
max(mean_heights_1000)
min(mean_heights_100)
min(mean_heights_100)
max(mean_heights_100)
min(mean_heights_1000)
max(mean_heights_1000)
bins <- seq(60,80,1)
hist(mean_heights_100,breaks=bins)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
count_100
count_1000
min(mean_heights_100)
max(mean_heights_100)
min(mean_heights_1000)
max(mean_heights_1000)
count_1000
count_100
?boxplot
boxplot(count_100)
?boxplot
barplot(count_100)
barplot(count_100,xlab ="Average Height",ylab = "Count")
barplot(count_100,xlab ="Average Height",ylab = "Count",xlim=c(60,80))
barplot(count_100,xlab ="Average Height",ylab = "Count")
?barplot
barplot(rbind(count_100,count_1000),xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),besides=TRUE, xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, names.arg = c(60,80),xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, names.arg = bins ,xlab ="Average Height",ylab = "Count")
bins
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),axis.lty=1,xlab ="Average Height",ylab = "Count")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),xlab ="Average Height",ylab = "Count")
bins <- seq(64,76,1)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),xlab ="Average Height",ylab = "Count")
for(i in 1:9)
{
cat(" ", fill=TRUE)
}
cat("*", fill=TRUE)
for(i in 1:9)
{
if(i == 9)
{
cat("*", fill=TRUE)
}
else
{cat(" ", fill=TRUE)}
}
for(i in 1:9)
{
cat("*&", fill=FALSE)
}
for(i in 1:10)
{
cat("*&", fill=FALSE)
}
for(i in 1:10)
{
cat("*", fill=FALSE)
if(i < 10)
{
cat("*", fill=FALSE)
}
}
for(i in 1:10)
{
cat("*", fill=FALSE)
if(i < 10)
{
cat("&", fill=FALSE)
}
}
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),cex.names = 10, xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),cex.names = 100, xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),cex.names = 1, xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),names.arg = bins, cex.names = 1, xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bins
count_100
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"),names.arg = bins, xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bins <- seq(64,72,1)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bins <- seq(64,74,1)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bin.label <- bins+0.5
bin.label
bins <- seq(64,74,0.5)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bins <- seq(64,74,0.5)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
rbind(count_100,count_1000)
bins
length(bins)
bins+0.5
bins[-21]
length(bins)
bins <-bins[-21]
bins+0.5
bins <- bins+0.5
bins
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
bins <- seq(64,74,0.5)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
bin.label <- bins[-21]
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
?legend
legend(0,400, fill="white")
legend(0,400, legend= c("n=100",'n=1000'), fill="white")
legend(0,400, legend= c("n=100",'n=1000'), col=c("red","blue") fill="white")
legend(0,400, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(0,400, legend= c("n=100",'n=1000'), col=c("red","blue"))
legend(0,400, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(64,500, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(65,500, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(10,500, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(0,500, legend= c("n=100",'n=1000'), col=c("red","blue"), fill="white")
legend(0,500, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19, fill="white")
legend(0,500, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,500, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,450, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
png("SimulatedAveHeight_barplot_Doughty")
dev.off()
?png
png(filename="SimulatedAveHeight_barplot_Doughty")
pdf(filename="SimulatedAveHeight_Barplot_Doughty")
?pdf
png(filename="SimulatedAveHeight_Barplot_Doughty.png")
?png
?dev.copy
par(mfrow=c(1,1))
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,450, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
png(filename="SimulatedAveHeight_Barplot_Doughty.png")
dev.copy(filename="SimulatedAveHeight_Barplot_Doughty.png")
dev.off()
par(mfrow=c(1,1))
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,450, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
dev.copy(filename="SimulatedAveHeight_Barplot_Doughty.png")
bins <- seq(64,74,0.5)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
bin.label <- bins[-21]
par(mfrow=c(1,1))
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,450, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
bin.label
get_heights <- function(sample = 100,mean.height=50,sdev.height=10)
{
heights <- rnorm(n=sample,mean=mean.height,sd=sdev.height)
#2
ave.height <- mean(heights)
#3
return(ave.height)
}
#4
iter <- 1000
mean_heights_100 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_100[i] <- get_heights(100, 69, 10)
}
#5
iter <- 1000
mean_heights_1000 <- rep(0,length.out = iter)
for(i in seq(1,iter))
{
mean_heights_1000[i] <- get_heights(1000, 69, 10)
}
#6
min(mean_heights_100)
max(mean_heights_100)
min(mean_heights_1000)
max(mean_heights_1000)
bins <- seq(64,74,0.5)
count_100<-hist(mean_heights_100,breaks=bins, plot=FALSE)$counts
count_1000<- hist(mean_heights_1000,breaks=bins, plot=FALSE)$counts
bin.label <- bins[-21]
par(mfrow=c(1,1))
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
legend(0,450, legend= c("n=100",'n=1000'), col=c("red","blue"),pch=19)
?dev.off
dev.new
barplot(rbind(count_100,count_1000),beside=TRUE, col=c("red","blue"), ylim=c(0,500),names.arg=bin.label, xlab ="Average Height (Inches)",ylab = "Count", main="Simulated Average Height of Humans at 100 and 1000 iterations")
